## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
src/Pixelatte.UI/*.rsuser
src/Pixelatte.UI/*.suo
src/Pixelatte.UI/*.user
src/Pixelatte.UI/*.userosscache
src/Pixelatte.UI/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
src/Pixelatte.UI/*.userprefs

# Mono auto generated files
src/Pixelatte.UI/mono_crash.*

# Build results
src/Pixelatte.UI/[Dd]ebug/
src/Pixelatte.UI/[Dd]ebugPublic/
src/Pixelatte.UI/[Rr]elease/
src/Pixelatte.UI/[Rr]eleases/
src/Pixelatte.UI/x64/
src/Pixelatte.UI/x86/
src/Pixelatte.UI/[Ww][Ii][Nn]32/
src/Pixelatte.UI/[Aa][Rr][Mm]/
src/Pixelatte.UI/[Aa][Rr][Mm]64/
src/Pixelatte.UI/bld/
src/Pixelatte.UI/[Bb]in/
src/Pixelatte.UI/[Oo]bj/
src/Pixelatte.UI/[Oo]ut/
src/Pixelatte.UI/[Ll]og/
src/Pixelatte.UI/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
src/Pixelatte.UI/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
src/Pixelatte.UI/Generated\ Files/

# MSTest test Results
src/Pixelatte.UI/[Tt]est[Rr]esult*/
src/Pixelatte.UI/[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
src/Pixelatte.UI/TestResult.xml
src/Pixelatte.UI/nunit-*.xml

# Build Results of an ATL Project
src/Pixelatte.UI/[Dd]ebugPS/
src/Pixelatte.UI/[Rr]eleasePS/
src/Pixelatte.UI/dlldata.c

# Benchmark Results
src/Pixelatte.UI/BenchmarkDotNet.Artifacts/

# .NET Core
src/Pixelatte.UI/project.lock.json
src/Pixelatte.UI/project.fragment.lock.json
src/Pixelatte.UI/artifacts/

# ASP.NET Scaffolding
src/Pixelatte.UI/ScaffoldingReadMe.txt

# StyleCop
src/Pixelatte.UI/StyleCopReport.xml

# Files built by Visual Studio
src/Pixelatte.UI/*_i.c
src/Pixelatte.UI/*_p.c
src/Pixelatte.UI/*_h.h
src/Pixelatte.UI/*.ilk
src/Pixelatte.UI/*.meta
src/Pixelatte.UI/*.obj
src/Pixelatte.UI/*.iobj
src/Pixelatte.UI/*.pch
src/Pixelatte.UI/*.pdb
src/Pixelatte.UI/*.ipdb
src/Pixelatte.UI/*.pgc
src/Pixelatte.UI/*.pgd
src/Pixelatte.UI/*.rsp
src/Pixelatte.UI/*.sbr
src/Pixelatte.UI/*.tlb
src/Pixelatte.UI/*.tli
src/Pixelatte.UI/*.tlh
src/Pixelatte.UI/*.tmp
src/Pixelatte.UI/*.tmp_proj
src/Pixelatte.UI/*_wpftmp.csproj
src/Pixelatte.UI/*.log
src/Pixelatte.UI/*.vspscc
src/Pixelatte.UI/*.vssscc
src/Pixelatte.UI/.builds
src/Pixelatte.UI/*.pidb
src/Pixelatte.UI/*.svclog
src/Pixelatte.UI/*.scc

# Chutzpah Test files
src/Pixelatte.UI/_Chutzpah*

# Visual C++ cache files
src/Pixelatte.UI/ipch/
src/Pixelatte.UI/*.aps
src/Pixelatte.UI/*.ncb
src/Pixelatte.UI/*.opendb
src/Pixelatte.UI/*.opensdf
src/Pixelatte.UI/*.sdf
src/Pixelatte.UI/*.cachefile
src/Pixelatte.UI/*.VC.db
src/Pixelatte.UI/*.VC.VC.opendb

# Visual Studio profiler
src/Pixelatte.UI/*.psess
src/Pixelatte.UI/*.vsp
src/Pixelatte.UI/*.vspx
src/Pixelatte.UI/*.sap

# Visual Studio Trace Files
src/Pixelatte.UI/*.e2e

# TFS 2012 Local Workspace
src/Pixelatte.UI/$tf/

# Guidance Automation Toolkit
src/Pixelatte.UI/*.gpState

# ReSharper is a .NET coding add-in
src/Pixelatte.UI/_ReSharper*/
src/Pixelatte.UI/*.[Rr]e[Ss]harper
src/Pixelatte.UI/*.DotSettings.user

# TeamCity is a build add-in
src/Pixelatte.UI/_TeamCity*

# DotCover is a Code Coverage Tool
src/Pixelatte.UI/*.dotCover

# AxoCover is a Code Coverage Tool
src/Pixelatte.UI/.axoCover/*
src/Pixelatte.UI/!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
src/Pixelatte.UI/coverage*.json
src/Pixelatte.UI/coverage*.xml
src/Pixelatte.UI/coverage*.info

# Visual Studio code coverage results
src/Pixelatte.UI/*.coverage
src/Pixelatte.UI/*.coveragexml

# NCrunch
src/Pixelatte.UI/_NCrunch_*
src/Pixelatte.UI/.*crunch*.local.xml
src/Pixelatte.UI/nCrunchTemp_*

# MightyMoose
src/Pixelatte.UI/*.mm.*
src/Pixelatte.UI/AutoTest.Net/

# Web workbench (sass)
src/Pixelatte.UI/.sass-cache/

# Installshield output folder
src/Pixelatte.UI/[Ee]xpress/

# DocProject is a documentation generator add-in
src/Pixelatte.UI/DocProject/buildhelp/
src/Pixelatte.UI/DocProject/Help/*.HxT
src/Pixelatte.UI/DocProject/Help/*.HxC
src/Pixelatte.UI/DocProject/Help/*.hhc
src/Pixelatte.UI/DocProject/Help/*.hhk
src/Pixelatte.UI/DocProject/Help/*.hhp
src/Pixelatte.UI/DocProject/Help/Html2
src/Pixelatte.UI/DocProject/Help/html

# Click-Once directory
src/Pixelatte.UI/publish/

# Publish Web Output
src/Pixelatte.UI/*.[Pp]ublish.xml
src/Pixelatte.UI/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
src/Pixelatte.UI/*.pubxml
src/Pixelatte.UI/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
src/Pixelatte.UI/PublishScripts/

# NuGet Packages
src/Pixelatte.UI/*.nupkg
# NuGet Symbol Packages
src/Pixelatte.UI/*.snupkg
# The packages folder can be ignored because of Package Restore
src/Pixelatte.UI/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
src/Pixelatte.UI/!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
src/Pixelatte.UI/*.nuget.props
src/Pixelatte.UI/*.nuget.targets

# Microsoft Azure Build Output
src/Pixelatte.UI/csx/
src/Pixelatte.UI/*.build.csdef

# Microsoft Azure Emulator
src/Pixelatte.UI/ecf/
src/Pixelatte.UI/rcf/

# Windows Store app package directories and files
src/Pixelatte.UI/AppPackages/
src/Pixelatte.UI/BundleArtifacts/
src/Pixelatte.UI/Package.StoreAssociation.xml
src/Pixelatte.UI/_pkginfo.txt
src/Pixelatte.UI/*.appx
src/Pixelatte.UI/*.appxbundle
src/Pixelatte.UI/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
src/Pixelatte.UI/*.[Cc]ache
# but keep track of directories ending in .cache
src/Pixelatte.UI/!?*.[Cc]ache/

# Others
src/Pixelatte.UI/ClientBin/
src/Pixelatte.UI/~$*
src/Pixelatte.UI/*~
src/Pixelatte.UI/*.dbmdl
src/Pixelatte.UI/*.dbproj.schemaview
src/Pixelatte.UI/*.jfm
src/Pixelatte.UI/*.pfx
src/Pixelatte.UI/*.publishsettings
src/Pixelatte.UI/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
src/Pixelatte.UI/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
src/Pixelatte.UI/_UpgradeReport_Files/
src/Pixelatte.UI/Backup*/
src/Pixelatte.UI/UpgradeLog*.XML
src/Pixelatte.UI/UpgradeLog*.htm
src/Pixelatte.UI/ServiceFabricBackup/
src/Pixelatte.UI/*.rptproj.bak

# SQL Server files
src/Pixelatte.UI/*.mdf
src/Pixelatte.UI/*.ldf
src/Pixelatte.UI/*.ndf

# Business Intelligence projects
src/Pixelatte.UI/*.rdl.data
src/Pixelatte.UI/*.bim.layout
src/Pixelatte.UI/*.bim_*.settings
src/Pixelatte.UI/*.rptproj.rsuser
src/Pixelatte.UI/*- [Bb]ackup.rdl
src/Pixelatte.UI/*- [Bb]ackup ([0-9]).rdl
src/Pixelatte.UI/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
src/Pixelatte.UI/FakesAssemblies/

# GhostDoc plugin setting file
src/Pixelatte.UI/*.GhostDoc.xml

# Node.js Tools for Visual Studio
src/Pixelatte.UI/.ntvs_analysis.dat
src/Pixelatte.UI/node_modules/

# Visual Studio 6 build log
src/Pixelatte.UI/*.plg

# Visual Studio 6 workspace options file
src/Pixelatte.UI/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
src/Pixelatte.UI/*.vbw

# Visual Studio LightSwitch build output
src/Pixelatte.UI/**/*.HTMLClient/GeneratedArtifacts
src/Pixelatte.UI/**/*.DesktopClient/GeneratedArtifacts
src/Pixelatte.UI/**/*.DesktopClient/ModelManifest.xml
src/Pixelatte.UI/**/*.Server/GeneratedArtifacts
src/Pixelatte.UI/**/*.Server/ModelManifest.xml
src/Pixelatte.UI/_Pvt_Extensions

# Paket dependency manager
src/Pixelatte.UI/.paket/paket.exe
src/Pixelatte.UI/paket-files/

# FAKE - F# Make
src/Pixelatte.UI/.fake/

# CodeRush personal settings
src/Pixelatte.UI/.cr/personal

# Python Tools for Visual Studio (PTVS)
src/Pixelatte.UI/__pycache__/
src/Pixelatte.UI/*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
src/Pixelatte.UI/*.tss

# Telerik's JustMock configuration file
src/Pixelatte.UI/*.jmconfig

# BizTalk build output
src/Pixelatte.UI/*.btp.cs
src/Pixelatte.UI/*.btm.cs
src/Pixelatte.UI/*.odx.cs
src/Pixelatte.UI/*.xsd.cs

# OpenCover UI analysis results
src/Pixelatte.UI/OpenCover/

# Azure Stream Analytics local run output
src/Pixelatte.UI/ASALocalRun/

# MSBuild Binary and Structured Log
src/Pixelatte.UI/*.binlog

# NVidia Nsight GPU debugger configuration file
src/Pixelatte.UI/*.nvuser

# MFractors (Xamarin productivity tool) working folder
src/Pixelatte.UI/.mfractor/

# Local History for Visual Studio
src/Pixelatte.UI/.localhistory/

# BeatPulse healthcheck temp database
src/Pixelatte.UI/healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
src/Pixelatte.UI/MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
src/Pixelatte.UI/.ionide/

# Fody - auto-generated XML schema
src/Pixelatte.UI/FodyWeavers.xsd

src/Pixelatte.UI/onnx-models

# Byte-compiled / optimized / DLL files
Pixelatte.UI/Backend/__pycache__/
Pixelatte.UI/Backend/*.py[cod]
Pixelatte.UI/Backend/*$py.class

# C extensions
Pixelatte.UI/Backend/*.so

# Distribution / packaging
Pixelatte.UI/Backend/.Python
Pixelatte.UI/Backend/build/
Pixelatte.UI/Backend/develop-eggs/
Pixelatte.UI/Backend/dist/
Pixelatte.UI/Backend/downloads/
Pixelatte.UI/Backend/eggs/
Pixelatte.UI/Backend/.eggs/
Pixelatte.UI/Backend/lib/
Pixelatte.UI/Backend/lib64/
Pixelatte.UI/Backend/parts/
Pixelatte.UI/Backend/sdist/
Pixelatte.UI/Backend/var/
Pixelatte.UI/Backend/wheels/
Pixelatte.UI/Backend/share/python-wheels/
Pixelatte.UI/Backend/*.egg-info/
Pixelatte.UI/Backend/.installed.cfg
Pixelatte.UI/Backend/*.egg
Pixelatte.UI/Backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
Pixelatte.UI/Backend/*.manifest
Pixelatte.UI/Backend/*.spec

# Installer logs
Pixelatte.UI/Backend/pip-log.txt
Pixelatte.UI/Backend/pip-delete-this-directory.txt

# Unit test / coverage reports
Pixelatte.UI/Backend/htmlcov/
Pixelatte.UI/Backend/.tox/
Pixelatte.UI/Backend/.nox/
Pixelatte.UI/Backend/.coverage
Pixelatte.UI/Backend/.coverage.*
Pixelatte.UI/Backend/.cache
Pixelatte.UI/Backend/nosetests.xml
Pixelatte.UI/Backend/coverage.xml
Pixelatte.UI/Backend/*.cover
Pixelatte.UI/Backend/*.py,cover
Pixelatte.UI/Backend/.hypothesis/
Pixelatte.UI/Backend/.pytest_cache/
Pixelatte.UI/Backend/cover/

# Translations
Pixelatte.UI/Backend/*.mo
Pixelatte.UI/Backend/*.pot

# Django stuff:
Pixelatte.UI/Backend/*.log
Pixelatte.UI/Backend/local_settings.py
Pixelatte.UI/Backend/db.sqlite3
Pixelatte.UI/Backend/db.sqlite3-journal

# Flask stuff:
Pixelatte.UI/Backend/instance/
Pixelatte.UI/Backend/.webassets-cache

# Scrapy stuff:
Pixelatte.UI/Backend/.scrapy

# Sphinx documentation
Pixelatte.UI/Backend/docs/_build/

# PyBuilder
Pixelatte.UI/Backend/.pybuilder/
Pixelatte.UI/Backend/target/

# Jupyter Notebook
Pixelatte.UI/Backend/.ipynb_checkpoints

# IPython
Pixelatte.UI/Backend/profile_default/
Pixelatte.UI/Backend/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
Pixelatte.UI/Backend/.pdm.toml
Pixelatte.UI/Backend/.pdm-python
Pixelatte.UI/Backend/.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
Pixelatte.UI/Backend/__pypackages__/

# Celery stuff
Pixelatte.UI/Backend/celerybeat-schedule
Pixelatte.UI/Backend/celerybeat.pid

# SageMath parsed files
Pixelatte.UI/Backend/*.sage.py

# Environments
Pixelatte.UI/Backend/.env
Pixelatte.UI/Backend/.venv
Pixelatte.UI/Backend/env/
Pixelatte.UI/Backend/venv/
Pixelatte.UI/Backend/ENV/
Pixelatte.UI/Backend/env.bak/
Pixelatte.UI/Backend/venv.bak/

# Spyder project settings
Pixelatte.UI/Backend/.spyderproject
Pixelatte.UI/Backend/.spyproject

# Rope project settings
Pixelatte.UI/Backend/.ropeproject

# mkdocs documentation
Pixelatte.UI/Backend/site

# mypy
Pixelatte.UI/Backend/.mypy_cache/
Pixelatte.UI/Backend/.dmypy.json
Pixelatte.UI/Backend/dmypy.json

# Pyre type checker
Pixelatte.UI/Backend/.pyre/

# pytype static type analyzer
Pixelatte.UI/Backend/.pytype/

# Cython debug symbols
Pixelatte.UI/Backend/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
Pixelatte.UI/Backend/.ruff_cache/

# PyPI configuration file
Pixelatte.UI/Backend/.pypirc